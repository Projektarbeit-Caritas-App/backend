## Autogenerated by Scribe. DO NOT MODIFY.

name: Card
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/card
    metadata:
      title: 'List all Cards'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      last_name:
        name: last_name
        description: 'Last name contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      first_name:
        name: first_name
        description: 'First name contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      street:
        name: street
        description: 'Street contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      postcode:
        name: postcode
        description: 'Postcode contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      city:
        name: city
        description: 'City contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      valid_from:
        name: valid_from
        description: ''
        required: false
        example: []
        type: object
        custom: []
      valid_from.0:
        name: valid_from.0
        description: 'Valid from is after this date. Must be a valid date.'
        required: false
        example: '2022-09-10T17:38:02'
        type: string
        custom: []
      valid_from.1:
        name: valid_from.1
        description: 'Valid from is before this date. Must be a valid date. This field is required when <code>valid_from.0</code> is present.'
        required: false
        example: '2022-09-10T17:38:02'
        type: string
        custom: []
      valid_until:
        name: valid_until
        description: ''
        required: false
        example: []
        type: object
        custom: []
      valid_until.0:
        name: valid_until.0
        description: 'Valid until is after this date. Must be a valid date.'
        required: false
        example: '2022-09-10T17:38:02'
        type: string
        custom: []
      valid_until.1:
        name: valid_until.1
        description: 'Valid until is before this date. Must be a valid date. This field is required when <code>valid_until.0</code> is present.'
        required: false
        example: '2022-09-10T17:38:02'
        type: string
        custom: []
      comment:
        name: comment
        description: 'Comment contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      creator_id:
        name: creator_id
        description: 'Created by user_id.'
        required: false
        example: null
        type: string
        custom: []
      sort:
        name: sort
        description: 'Sort by given field. Must be one of <code>id</code>, <code>last_name</code>, <code>first_name</code>, <code>street</code>, <code>postcode</code>, <code>city</code>, <code>valid_from</code>, <code>valid_until</code>, or <code>creator_id</code>.'
        required: false
        example: last_name
        type: string
        custom: []
      order:
        name: order
        description: 'Sort ascending or descending. Must be one of <code>asc</code> or <code>desc</code>.'
        required: false
        example: desc
        type: string
        custom: []
      page:
        name: page
        description: 'Page to load.'
        required: false
        example: 10
        type: integer
        custom: []
      limit:
        name: limit
        description: 'Items per page. Must be at least 10. Must not be greater than 500.'
        required: false
        example: 120
        type: integer
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "items": [
               {
                "id": 1,
                "last_name": "Mustermann",
                "first_name": "Müller",
                "street": "Mühlenstraße 5",
                "postcode": "12345",
                "city": "Würzburg",
                "valid_from": "2022-01-01T00:00:00.000000Z",
                "valid_until": "2022-03-31T00:00:00.000000Z",
                "creator_id": 1,
                "comment": null,
                "created_at": "2022-08-16T15:00:00.000000Z",
                "updated_at": "2022-08-16T15:00:00.000000Z"
              }, {
                "id": 49394739894111,
                "last_name": "Kitsune",
                "first_name": "Yasu",
                "street": "Teststraße 123",
                "postcode": "12345",
                "city": "Teststadt",
                "valid_from": "2022-01-01T00:00:00.000000Z",
                "valid_until": "2022-03-31T00:00:00.000000Z",
                "creator_id": 1,
                "comment": "Hallo Welt",
                "created_at": "2022-08-18T13:47:42.000000Z",
                "updated_at": "2022-08-18T13:47:42.000000Z"
              }
            ],
            "meta": {
              "current_page": 1,
              "last_page": 1,
              "per_page": 25,
              "item_count": 2
            },
            "links": {
              "prev_page_url": null,
              "next_page_url": null
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/card
    metadata:
      title: 'Create new Card'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      last_name:
        name: last_name
        description: 'Last name of the cardholder.'
        required: true
        example: Kitsune
        type: string
        custom: []
      first_name:
        name: first_name
        description: 'First name of the cardholder.'
        required: true
        example: Yasu
        type: string
        custom: []
      street:
        name: street
        description: 'Street where the cardholder is located.'
        required: false
        example: 'Foxstreet 10'
        type: string
        custom: []
      postcode:
        name: postcode
        description: 'Postcode where the cardholder is located.'
        required: false
        example: '12345'
        type: string
        custom: []
      city:
        name: city
        description: 'City where the cardholder is located.'
        required: false
        example: Foxhole
        type: string
        custom: []
      valid_from:
        name: valid_from
        description: 'Date and time of the start of validity of the card. Must be a valid date.'
        required: true
        example: '2022-08-04 12:00:00'
        type: string
        custom: []
      valid_until:
        name: valid_until
        description: 'Date and time of the expiry of the card. Must be a valid date.'
        required: true
        example: '2022-08-04 12:00:00'
        type: string
        custom: []
      comment:
        name: comment
        description: 'Additional Comment for the card.'
        required: false
        example: 'Took an additional buggy for his newly born child'
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/card/{id}'
    metadata:
      title: 'Show specified Card'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the card.'
        required: true
        example: 56815898664224
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 49394739894111,
            "last_name": "Kitsune",
            "first_name": "Yasu",
            "street": "Teststraße 123",
            "postcode": "12345",
            "city": "Teststadt",
            "valid_from": "2022-01-01T00:00:00.000000Z",
            "valid_until": "2022-03-31T00:00:00.000000Z",
            "creator_id": 1,
            "comment": null,
            "created_at": "2022-08-18T13:47:42.000000Z",
            "updated_at": "2022-08-18T13:47:42.000000Z"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/card/{id}'
    metadata:
      title: 'Update specified Card'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the card.'
        required: true
        example: 56815898664224
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      last_name:
        name: last_name
        description: 'Last name of the cardholder.'
        required: true
        example: Kitsune
        type: string
        custom: []
      first_name:
        name: first_name
        description: 'First name of the cardholder.'
        required: true
        example: Yasu
        type: string
        custom: []
      street:
        name: street
        description: 'Street where the cardholder is located.'
        required: false
        example: 'Foxstreet 10'
        type: string
        custom: []
      postcode:
        name: postcode
        description: 'Postcode where the cardholder is located.'
        required: false
        example: '12345'
        type: string
        custom: []
      city:
        name: city
        description: 'City where the cardholder is located.'
        required: false
        example: Foxhole
        type: string
        custom: []
      valid_from:
        name: valid_from
        description: 'Date and time of the start of validity of the card. Must be a valid date.'
        required: true
        example: '2022-08-04 12:00:00'
        type: string
        custom: []
      valid_until:
        name: valid_until
        description: 'Date and time of the expiry of the card. Must be a valid date.'
        required: true
        example: '2022-08-04 12:00:00'
        type: string
        custom: []
      comment:
        name: comment
        description: 'Additional Comment for the card.'
        required: false
        example: 'Took an additional buggy for his newly born child'
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/card/{id}'
    metadata:
      title: 'Delete specified Card'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the card.'
        required: true
        example: 56815898664224
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true
          }
        headers: []
        description: '200'
    responseFields: []
