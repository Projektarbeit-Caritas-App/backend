name: Person
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/person
    metadata:
      title: 'List all persons'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      card_id:
        name: card_id
        description: Card.
        required: false
        example: null
        type: string
        custom: []
      gender:
        name: gender
        description: 'Gender contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      age:
        name: age
        description: 'Age is.'
        required: false
        example: 10
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by given field. Must be one of <code>id</code>, <code>card_id</code>, <code>gender</code>, or <code>age</code>.'
        required: false
        example: card_id
        type: string
        custom: []
      order:
        name: order
        description: 'Sort ascending or descending. Must be one of <code>asc</code> or <code>desc</code>.'
        required: false
        example: desc
        type: string
        custom: []
      page:
        name: page
        description: 'Page to load.'
        required: false
        example: 10
        type: integer
        custom: []
      limit:
        name: limit
        description: 'Items per page. Must be at least 10. Must not be greater than 500.'
        required: false
        example: 120
        type: integer
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "items": [
              {
                "id": 1,
                "card_id": 1,
                "gender": "male",
                "age": 18,
                "limitation_sets": [
                  {
                    "id": 1,
                    "name": "A set to limit them all",
                    "valid_from": "2022-08-04 12:00:00",
                    "valid_until": "2022-08-04 12:00:00",
                    "created_at": "2022-09-08T13:05:40.000000Z",
                    "updated_at": "2022-09-08T13:05:40.000000Z",
                    "instance_id": 1,
                    "pivot": {
                      "person_id": 1,
                      "limitation_set_id": 1,
                      "created_at": "2022-09-08T13:06:41.000000Z",
                      "updated_at": "2022-09-08T13:06:41.000000Z"
                    }
                  }
                ],
                "created_at": "2022-08-18T13:48:25.000000Z",
                "updated_at": "2022-08-18T13:48:25.000000Z"
              }, {
                "id": 2,
                "card_id": 1,
                "gender": "female",
                "age": 15,
                "limitation_sets": [
                  {
                    "id": 1,
                    "name": "A set to limit them all",
                    "valid_from": "2022-08-04 12:00:00",
                    "valid_until": "2022-08-04 12:00:00",
                    "created_at": "2022-09-08T13:05:40.000000Z",
                    "updated_at": "2022-09-08T13:05:40.000000Z",
                    "instance_id": 1,
                    "pivot": {
                      "person_id": 2,
                      "limitation_set_id": 1,
                      "created_at": "2022-09-08T13:06:41.000000Z",
                      "updated_at": "2022-09-08T13:06:41.000000Z"
                    }
                  }
                ],
                "created_at": "2022-08-18T13:48:25.000000Z",
                "updated_at": "2022-08-18T13:48:25.000000Z"
              }, {
                "id": 3,
                "card_id": 49394739894111,
                "gender": "male",
                "age": 23,
                "limitation_sets": [
                  {
                    "id": 1,
                    "name": "A set to limit them all",
                    "valid_from": "2022-08-04 12:00:00",
                    "valid_until": "2022-08-04 12:00:00",
                    "created_at": "2022-09-08T13:05:40.000000Z",
                    "updated_at": "2022-09-08T13:05:40.000000Z",
                    "instance_id": 1,
                    "pivot": {
                      "person_id": 3,
                      "limitation_set_id": 1,
                      "created_at": "2022-09-08T13:06:41.000000Z",
                      "updated_at": "2022-09-08T13:06:41.000000Z"
                    }
                  }
                ],
                "created_at": "2022-08-18T13:48:25.000000Z",
                "updated_at": "2022-08-18T13:48:25.000000Z"
              }
            ],
            "meta": {
              "current_page": 1,
              "last_page": 1,
              "per_page": 25,
              "item_count": 3
            },
            "links": {
              "prev_page_url": null,
              "next_page_url": null
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/person
    metadata:
      title: 'Create new Person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      card_id:
        name: card_id
        description: 'ID of the card the person is attached to.'
        required: true
        example: '50080528753334'
        type: string
        custom: []
      gender:
        name: gender
        description: 'Gender of the person. Must not be greater than 125 characters.'
        required: true
        example: male
        type: string
        custom: []
      age:
        name: age
        description: 'Age of the Person.'
        required: true
        example: 20
        type: integer
        custom: []
      limitation_sets:
        name: limitation_sets
        description: 'IDs of the limitation_sets.'
        required: true
        example:
          - '49394739894111'
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/person/{id}'
    metadata:
      title: 'Show specified Person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the person.'
        required: true
        example: 57959838684647
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 2,
            "card_id": 1,
            "gender": "female",
            "age": 15,
            "limitation_sets": [
              {
                "id": 1,
                "name": "A set to limit them all",
                "valid_from": "2022-08-04 12:00:00",
                "valid_until": "2022-08-04 12:00:00",
                "created_at": "2022-09-08T13:05:40.000000Z",
                "updated_at": "2022-09-08T13:05:40.000000Z",
                "instance_id": 1,
                "pivot": {
                  "person_id": 2,
                  "limitation_set_id": 1,
                  "created_at": "2022-09-08T13:06:41.000000Z",
                  "updated_at": "2022-09-08T13:06:41.000000Z"
                }
              }
            ],
            "created_at": "2022-08-18T13:48:25.000000Z",
            "updated_at": "2022-08-18T13:48:25.000000Z"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/person/{id}'
    metadata:
      title: 'Update specified Person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the person.'
        required: true
        example: 57959838684647
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      card_id:
        name: card_id
        description: 'ID of the card the person is attached to.'
        required: true
        example: '50080528753334'
        type: string
        custom: []
      gender:
        name: gender
        description: 'Gender of the person. Must not be greater than 125 characters.'
        required: true
        example: male
        type: string
        custom: []
      age:
        name: age
        description: 'Age of the Person.'
        required: true
        example: 20
        type: integer
        custom: []
      limitation_sets:
        name: limitation_sets
        description: 'IDs of the limitation_sets.'
        required: true
        example:
          - '49394739894111'
        type: 'string[]'
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/person/{id}'
    metadata:
      title: 'Delete specified Person'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the person.'
        required: true
        example: 57959838684647
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true
          }
        headers: []
        description: '200'
    responseFields: []
