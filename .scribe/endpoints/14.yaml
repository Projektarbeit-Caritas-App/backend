name: User
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/user
    metadata:
      title: 'List all Users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      organization_id:
        name: organization_id
        description: Organization.
        required: false
        example: null
        type: string
        custom: []
      name:
        name: name
        description: 'Name contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      email:
        name: email
        description: 'E-Mail contains.'
        required: false
        example: laudantium
        type: string
        custom: []
      sort:
        name: sort
        description: 'Sort by given field. Must be one of <code>id</code>, <code>organization_id</code>, <code>name</code>, or <code>email</code>.'
        required: false
        example: organization_id
        type: string
        custom: []
      order:
        name: order
        description: 'Sort ascending or descending. Must be one of <code>asc</code> or <code>desc</code>.'
        required: false
        example: desc
        type: string
        custom: []
      page:
        name: page
        description: 'Page to load.'
        required: false
        example: 10
        type: integer
        custom: []
      limit:
        name: limit
        description: 'Items per page. Must be at least 10. Must not be greater than 500.'
        required: false
        example: 120
        type: integer
        custom: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "items": [
              {
                "id": 3,
                "instance_id": 3,
                "organization_id": 3,
                "name": "Rene",
                "email": "rene@web.de",
                "created_at": "2022-08-21T11:34:55.000000Z",
                "updated_at": "2022-08-21T11:34:55.000000Z"
              }
            ],
            "meta": {
              "current_page": 1,
              "last_page": 1,
              "per_page": 25,
              "item_count": 1
            },
            "links": {
              "prev_page_url": null,
              "next_page_url": null
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/admin/user
    metadata:
      title: 'Create new User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      organization_id:
        name: organization_id
        description: 'ID of the organization the user is attached to.'
        required: true
        example: '50080528753334'
        type: string
        custom: []
      name:
        name: name
        description: 'Name of the user. Must not be greater than 125 characters.'
        required: true
        example: xX_B4d-gUY_08_Xx
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user. Must be a valid email address. Must not be greater than 125 characters.'
        required: true
        example: B4d-gUY@web.de
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: MyP4zzW0rD
        type: string
        custom: []
      role:
        name: role
        description: 'Must be one of <code>inactive</code>, <code>external_employee</code>, <code>external_manager</code>, <code>employee</code>, <code>organization_manager</code>, or <code>instance_manager</code>.'
        required: true
        example: external_employee
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/user/{id}'
    metadata:
      title: 'Show specified User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 10
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/user/{id}'
    metadata:
      title: 'Update specified User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 10
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      organization_id:
        name: organization_id
        description: 'ID of the organization the user is attached to.'
        required: true
        example: laudantium
        type: string
        custom: []
      name:
        name: name
        description: 'Name of the user. Must not be greater than 125 characters.'
        required: true
        example: gnpvoahjpxfnvoeetmtfqumygmyxaxnluacrxfsujgdqrujyxgirkkndke
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user. Must be a valid email address. Must not be greater than 125 characters.'
        required: true
        example: qbpozzmbeloiizfbptdjzqfjlwkpteisdwcgpxuyfnecrhpxrycgvrganz
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: false
        example: laudantium
        type: string
        custom: []
      role:
        name: role
        description: 'Must be one of <code>inactive</code>, <code>external_employee</code>, <code>external_manager</code>, <code>employee</code>, <code>organization_manager</code>, or <code>instance_manager</code>.'
        required: true
        example: external_employee
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/user/{id}'
    metadata:
      title: 'Delete specified User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 10
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true
          }
        headers: []
        description: '200'
    responseFields: []
