openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/handshake:
    get:
      summary: 'Create session and XSRF-Token'
      description: "Required to initialise a new Cookie-Session for SPAs.\nDo not use this endpoint if you want to use Token-Auth."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Referer
          description: ''
          example: '{URL of your SPA}'
          schema:
            type: string
      responses:
        204:
          description: ''
      tags:
        - Authentication
      security: []
  /api/auth/login:
    post:
      summary: 'Login with SPA-Session (Cookies)'
      description: "After you send a GET-request to <code>/api/handshake</code>, which will create the Session and give you a XSRF-Token,\nyou can send your Credentials to this endpoint and authenticate your session.\n\nAll further requests are now authenticated through cookies and do not require an Authorization-Header.\n\n<aside class=\"warning\">\n  If you get an Error 419, make sure your Request contains the X-XSRF-TOKEN header.\n  <p>\n    You can enable this in axios with the following line:\n    <pre style=\"float: none; width: 100%;\"><code>axios.defaults.withCredentials = true;</code></pre>\n  </p>\n</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Referer
          description: ''
          example: '{URL of your SPA}'
          schema:
            type: string
        -
          in: header
          name: X-XSRF-TOKEN
          description: ''
          example: '{Your XSRF-Token}'
          schema:
            type: string
      responses:
        200:
          description: 'Valid credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  user:
                    id: 1
                    name: 'Example User'
                    email: example@localhost.test
                    roles:
                      - instance_manager
                    permissions:
                      - card.external
                      - card.manage
                      - card.view
                      - limits.manage
                      - organisation.manage
                      - organisation.view
                      - shop.manage
                      - shop.view
                      - stats.view
                      - user.manage
                      - user.view
                    instance:
                      id: 1
                      name: 'Example Instance'
                      street: 'Teststreet 123'
                      postcode: '12345'
                      city: Test
                      contact: example@localhost.test
                      created_at: '2022-08-02T11:59:43.000000Z'
                      updated_at: '2022-08-02T11:59:43.000000Z'
                    organization:
                      id: 1
                      name: 'Example Organisation'
                      street: 'Teststreet 123'
                      postcode: '12345'
                      city: Test
                      contact: example@localhost.test
                      created_at: '2022-08-02T11:59:44.000000Z'
                      updated_at: '2022-08-02T11:59:44.000000Z'
                    created_at: '2022-08-02T11:59:44.000000Z'
                    updated_at: '2022-08-02T11:59:44.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    type: object
                    example:
                      id: 1
                      name: 'Example User'
                      email: example@localhost.test
                      roles:
                        - instance_manager
                      permissions:
                        - card.external
                        - card.manage
                        - card.view
                        - limits.manage
                        - organisation.manage
                        - organisation.view
                        - shop.manage
                        - shop.view
                        - stats.view
                        - user.manage
                        - user.view
                      instance:
                        id: 1
                        name: 'Example Instance'
                        street: 'Teststreet 123'
                        postcode: '12345'
                        city: Test
                        contact: example@localhost.test
                        created_at: '2022-08-02T11:59:43.000000Z'
                        updated_at: '2022-08-02T11:59:43.000000Z'
                      organization:
                        id: 1
                        name: 'Example Organisation'
                        street: 'Teststreet 123'
                        postcode: '12345'
                        city: Test
                        contact: example@localhost.test
                        created_at: '2022-08-02T11:59:44.000000Z'
                        updated_at: '2022-08-02T11:59:44.000000Z'
                      created_at: '2022-08-02T11:59:44.000000Z'
                      updated_at: '2022-08-02T11:59:44.000000Z'
        401:
          description: 'Invalid credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                properties:
                  success:
                    type: boolean
                    example: false
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'E-Mail of the user.'
                  example: et
                password:
                  type: string
                  description: 'Password of the user.'
                  example: consequatur
              required:
                - email
                - password
      security: []
  /api/auth/token:
    post:
      summary: 'Login with Bearer Token (Authorization Header)'
      description: "<small class=\"badge badge-purple\">App authorization available</small>\n\nIf you are not able to use Cookies, for example in a mobile application, you can use Token-Auth instead.\nTokens will be valid for 20 hours before they expire.\n\n<aside class=\"warning\">\n  Endpoints under the <code>/admin</code> path will not be available for Applications using Token-Auth.\n</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'Valid credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  token: '{YOUR_AUTH_KEY}'
                  user:
                    id: 1
                    name: 'Example User'
                    email: example@localhost.test
                    roles:
                      - instance_manager
                    permissions:
                      - card.external
                      - card.manage
                      - card.view
                      - limits.manage
                      - organisation.manage
                      - organisation.view
                      - shop.manage
                      - shop.view
                      - stats.view
                      - user.manage
                      - user.view
                    instance:
                      id: 1
                      name: 'Example Instance'
                      street: 'Teststreet 123'
                      postcode: '12345'
                      city: Test
                      contact: example@localhost.test
                      created_at: '2022-08-02T11:59:43.000000Z'
                      updated_at: '2022-08-02T11:59:43.000000Z'
                    organization:
                      id: 1
                      name: 'Example Organisation'
                      street: 'Teststreet 123'
                      postcode: '12345'
                      city: Test
                      contact: example@localhost.test
                      created_at: '2022-08-02T11:59:44.000000Z'
                      updated_at: '2022-08-02T11:59:44.000000Z'
                    created_at: '2022-08-02T11:59:44.000000Z'
                    updated_at: '2022-08-02T11:59:44.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: '{YOUR_AUTH_KEY}'
                  user:
                    type: object
                    example:
                      id: 1
                      name: 'Example User'
                      email: example@localhost.test
                      roles:
                        - instance_manager
                      permissions:
                        - card.external
                        - card.manage
                        - card.view
                        - limits.manage
                        - organisation.manage
                        - organisation.view
                        - shop.manage
                        - shop.view
                        - stats.view
                        - user.manage
                        - user.view
                      instance:
                        id: 1
                        name: 'Example Instance'
                        street: 'Teststreet 123'
                        postcode: '12345'
                        city: Test
                        contact: example@localhost.test
                        created_at: '2022-08-02T11:59:43.000000Z'
                        updated_at: '2022-08-02T11:59:43.000000Z'
                      organization:
                        id: 1
                        name: 'Example Organisation'
                        street: 'Teststreet 123'
                        postcode: '12345'
                        city: Test
                        contact: example@localhost.test
                        created_at: '2022-08-02T11:59:44.000000Z'
                        updated_at: '2022-08-02T11:59:44.000000Z'
                      created_at: '2022-08-02T11:59:44.000000Z'
                      updated_at: '2022-08-02T11:59:44.000000Z'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'E-Mail of the user. Must be a valid email address.'
                  example: larkin.prudence@example.net
                password:
                  type: string
                  description: 'Password of the user.'
                  example: eos
                device_name:
                  type: string
                  description: 'Name of the device, used for identification of the token.'
                  example: sed
              required:
                - email
                - password
                - device_name
      security: []
  /api/auth/logout:
    post:
      summary: Logout
      description: "<small class=\"badge badge-purple\">App authorization available</small>\n\nInvalidate your current session/token"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Authentication
  /api/admin/card:
    get:
      summary: 'List all Cards'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Card
    post:
      summary: 'Create new Card'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                last_name:
                  type: string
                  description: 'Last name of the cardholder.'
                  example: Kitsune
                first_name:
                  type: string
                  description: 'First name of the cardholder.'
                  example: Yasu
                street:
                  type: string
                  description: 'Street where the cardholder is located.'
                  example: 'Foxstreet 10'
                postcode:
                  type: string
                  description: 'Postcode where the cardholder is located.'
                  example: '12345'
                city:
                  type: string
                  description: 'City where the cardholder is located.'
                  example: Foxhole
                valid_from:
                  type: string
                  description: 'Date and time of the start of validity of the card. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                valid_until:
                  type: string
                  description: 'Date and time of the expiry of the card. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                creator_id:
                  type: string
                  description: 'ID of the User the card is attached to.'
                  example: '50080528753334'
              required:
                - last_name
                - first_name
                - valid_from
                - valid_until
                - creator_id
  '/api/admin/card/{id}':
    get:
      summary: 'Show specified Card'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Card
    put:
      summary: 'Update specified Card'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Card
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                last_name:
                  type: string
                  description: 'Last name of the cardholder.'
                  example: Kitsune
                first_name:
                  type: string
                  description: 'First name of the cardholder.'
                  example: Yasu
                street:
                  type: string
                  description: 'Street where the cardholder is located.'
                  example: 'Foxstreet 10'
                postcode:
                  type: string
                  description: 'Postcode where the cardholder is located.'
                  example: '12345'
                city:
                  type: string
                  description: 'City where the cardholder is located.'
                  example: Foxhole
                valid_from:
                  type: string
                  description: 'Date and time of the start of validity of the card. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                valid_until:
                  type: string
                  description: 'Date and time of the expiry of the card. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                creator_id:
                  type: string
                  description: 'ID of the User the card is attached to.'
                  example: '50080528753334'
              required:
                - last_name
                - first_name
                - valid_from
                - valid_until
                - creator_id
    delete:
      summary: 'Delete specified Card'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Card
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the card.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/card/visit/{card_id}':
    get:
      summary: 'Show specified Card and related Persons'
      description: "<small class=\"badge badge-purple\">App authorization available</small>\n\nEndpoint shows the specified card, the associated people and the limitation_state.\nThe limitation_state shows for the persons the limit for a productType and how\nmany of them have already been used by a person"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  card:
                    id: 1
                    last_name: Mustermann
                    first_name: Müller
                    street: 'Mühlenstraße 5'
                    postcode: '12345'
                    city: Würzburg
                    valid_from: '2022-01-01T00:00:00.000000Z'
                    valid_until: '2022-03-31T00:00:00.000000Z'
                    creator_id: 1
                    created_at: null
                    updated_at: null
                  persons:
                    -
                      id: 1
                      gender: male
                      age: 18
                      created_at: null
                      updated_at: null
                      limitation_states:
                        -
                          product_type:
                            id: 1
                            name: t-shirt
                            icon: 't-shirt icon'
                          limit: 3
                          used: 4
                        -
                          product_type:
                            id: 2
                            name: shoe
                            icon: 'shoe icon'
                          limit: 5
                          used: 0
                        -
                          product_type:
                            id: 3
                            name: sock
                            icon: 'sock icon'
                          limit: 2
                          used: 1
                    -
                      id: 2
                      gender: female
                      age: 15
                      created_at: null
                      updated_at: null
                      limitation_states:
                        -
                          product_type:
                            id: 1
                            name: t-shirt
                            icon: 't-shirt icon'
                          limit: 3
                          used: 0
                        -
                          product_type:
                            id: 2
                            name: shoe
                            icon: 'shoe icon'
                          limit: 5
                          used: 1
                        -
                          product_type:
                            id: 3
                            name: sock
                            icon: 'sock icon'
                          limit: 2
                          used: 0
                properties:
                  card:
                    type: object
                    example:
                      id: 1
                      last_name: Mustermann
                      first_name: Müller
                      street: 'Mühlenstraße 5'
                      postcode: '12345'
                      city: Würzburg
                      valid_from: '2022-01-01T00:00:00.000000Z'
                      valid_until: '2022-03-31T00:00:00.000000Z'
                      creator_id: 1
                      created_at: null
                      updated_at: null
                  persons:
                    type: array
                    example:
                      -
                        id: 1
                        gender: male
                        age: 18
                        created_at: null
                        updated_at: null
                        limitation_states:
                          -
                            product_type:
                              id: 1
                              name: t-shirt
                              icon: 't-shirt icon'
                            limit: 3
                            used: 4
                          -
                            product_type:
                              id: 2
                              name: shoe
                              icon: 'shoe icon'
                            limit: 5
                            used: 0
                          -
                            product_type:
                              id: 3
                              name: sock
                              icon: 'sock icon'
                            limit: 2
                            used: 1
                      -
                        id: 2
                        gender: female
                        age: 15
                        created_at: null
                        updated_at: null
                        limitation_states:
                          -
                            product_type:
                              id: 1
                              name: t-shirt
                              icon: 't-shirt icon'
                            limit: 3
                            used: 0
                          -
                            product_type:
                              id: 2
                              name: shoe
                              icon: 'shoe icon'
                            limit: 5
                            used: 1
                          -
                            product_type:
                              id: 3
                              name: sock
                              icon: 'sock icon'
                            limit: 2
                            used: 0
                    items:
                      type: object
      tags:
        - Checkout
    post:
      summary: 'Create new Visit, LineItems'
      description: "<small class=\"badge badge-purple\">App authorization available</small>\n\nEndpoint creates a new Visit entry and stores the submitted lineItems"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Checkout
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                lineItems:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      person_id:
                        type: string
                        description: 'ID of the person the lineItem is for.'
                        example: '50080528753334'
                      product_type_id:
                        type: string
                        description: 'ID of the product_type of the lineItem.'
                        example: '50080528753334'
                      amount:
                        type: integer
                        description: 'The amount of purchased lineItems of the same product_type. Must be at least 1.'
                        example: 5
                    required:
                      - person_id
                      - product_type_id
                      - amount
    parameters:
      -
        in: path
        name: card_id
        description: 'The ID of the card.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/limitation/limit:
    get:
      summary: 'List all Limitation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    product_type_id: 1
                    limitation_set_id: 1
                    limit: 3
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
                  -
                    id: 3
                    product_type_id: 2
                    limitation_set_id: 2
                    limit: 5
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
                  -
                    id: 4
                    product_type_id: 2
                    limitation_set_id: 1
                    limit: 5
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
                  -
                    id: 5
                    product_type_id: 3
                    limitation_set_id: 1
                    limit: 2
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
      tags:
        - Limitation
    post:
      summary: 'Create new Limitation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Limitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_type_id:
                  type: string
                  description: 'ID of the product type the limitation is attached to.'
                  example: '50080528753334'
                limitation_set_id:
                  type: string
                  description: 'ID of the limitation set the limitation is attached to.'
                  example: '50080528753334'
                limit:
                  type: integer
                  description: 'Number that determines the limit.'
                  example: 3
              required:
                - product_type_id
                - limitation_set_id
  '/api/admin/limitation/limit/{limitation_id}':
    get:
      summary: 'Show specified Limitation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  product_type_id: 1
                  limitation_set_id: 1
                  limit: 3
                  created_at: '2022-08-16T16:32:23.000000Z'
                  updated_at: '2022-08-16T16:32:23.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  product_type_id:
                    type: integer
                    example: 1
                  limitation_set_id:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
      tags:
        - Limitation
    put:
      summary: 'Update specified Limitation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Limitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_type_id:
                  type: string
                  description: 'ID of the product type the limitation is attached to.'
                  example: '50080528753334'
                limitation_set_id:
                  type: string
                  description: 'ID of the limitation set the limitation is attached to.'
                  example: '50080528753334'
                limit:
                  type: integer
                  description: 'Number that determines the limit.'
                  example: 3
              required:
                - product_type_id
                - limitation_set_id
    delete:
      summary: 'Delete specified Limitation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Limitation
    parameters:
      -
        in: path
        name: limitation_id
        description: 'The ID of the limitation.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/limitation/set:
    get:
      summary: 'List all LimitationSets'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: 'limitation_set 1'
                    valid_from: '1999-08-20 22:00:00'
                    valid_until: '2016-08-20 22:00:00'
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
                  -
                    id: 2
                    name: 'limitation_set 2'
                    valid_from: '2020-02-14 00:00:00'
                    valid_until: '2021-05-17 00:00:00'
                    created_at: '2022-08-16T16:32:23.000000Z'
                    updated_at: '2022-08-16T16:32:23.000000Z'
      tags:
        - 'Limitation Set'
    post:
      summary: 'Create new LimitationSet'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Limitation Set'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the limitation set.'
                  example: 'A set to limit them all ~ Tolkien II'
                valid_from:
                  type: string
                  description: 'Date and time of the start of the validity of the limitation set. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                valid_until:
                  type: string
                  description: 'Date and time of the expiry of the limitation set. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
              required:
                - name
                - valid_from
  '/api/admin/limitation/set/{limitationSet_id}':
    get:
      summary: 'Show specified LimitationSet'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'limitation_set 1'
                  valid_from: '1999-08-20 22:00:00'
                  valid_until: '2016-08-20 22:00:00'
                  created_at: '2022-08-16T16:32:23.000000Z'
                  updated_at: '2022-08-16T16:32:23.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'limitation_set 1'
                  valid_from:
                    type: string
                    example: '1999-08-20 22:00:00'
                  valid_until:
                    type: string
                    example: '2016-08-20 22:00:00'
                  created_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
      tags:
        - 'Limitation Set'
    put:
      summary: 'Update specified LimitationSet'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Limitation Set'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the limitation set.'
                  example: 'A set to limit them all ~ Tolkien II'
                valid_from:
                  type: string
                  description: 'Date and time of the start of the validity of the limitation set. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
                valid_until:
                  type: string
                  description: 'Date and time of the expiry of the limitation set. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
              required:
                - name
                - valid_from
    delete:
      summary: 'Delete specified LimitationSet'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - 'Limitation Set'
    parameters:
      -
        in: path
        name: limitationSet_id
        description: 'The ID of the limitationSet.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/lineItem:
    get:
      summary: 'List all LineItems'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "[\n     {\n          \"id\": 6,\n          \"visit_id\": 5,\n          \"person_id\": 1,\n          \"product_type_id\": 1,\n          \"created_at\": \"2022-08-16T16:32:23.000000Z\",\n          \"updated_at\": \"2022-08-16T16:32:23.000000Z\"\n     },\n     {\n          \"id\": 7,\n          \"visit_id\": 6,\n          \"person_id\": 1,\n          \"product_type_id\": 1,\n          \"created_at\": \"2022-08-16T16:32:52.000000Z\",\n          \"updated_at\": \"2022-08-16T16:32:52.000000Z\"\n     },\n]"
      tags:
        - 'Line Item'
    post:
      summary: 'Create new LineItem'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Line Item'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visit_id:
                  type: string
                  description: 'ID of the visit the lineItem is attached to.'
                  example: '50080528753334'
                person_id:
                  type: string
                  description: 'ID of the person the lineItem is attached to.'
                  example: '50080528753334'
                product_type_id:
                  type: string
                  description: 'ID of the product_type the lineItem is attached to.'
                  example: '50080528753334'
              required:
                - visit_id
                - person_id
                - product_type_id
  '/api/admin/lineItem/{id}':
    get:
      summary: 'Show specified LineItem'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  visit_id: 5
                  person_id: 1
                  product_type_id: 1
                  created_at: '2022-08-16T16:32:23.000000Z'
                  updated_at: '2022-08-16T16:32:23.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  visit_id:
                    type: integer
                    example: 5
                  person_id:
                    type: integer
                    example: 1
                  product_type_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-16T16:32:23.000000Z'
      tags:
        - 'Line Item'
    put:
      summary: 'Update specified LineItem'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Line Item'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                visit_id:
                  type: string
                  description: 'ID of the visit the lineItem is attached to.'
                  example: '50080528753334'
                person_id:
                  type: string
                  description: 'ID of the person the lineItem is attached to.'
                  example: '50080528753334'
                product_type_id:
                  type: string
                  description: 'ID of the product_type the lineItem is attached to.'
                  example: '50080528753334'
              required:
                - visit_id
                - person_id
                - product_type_id
    delete:
      summary: 'Delete specified LineItem'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - 'Line Item'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the lineItem.'
        example: 3
        required: true
        schema:
          type: integer
  /api/admin/organization:
    get:
      summary: 'List all Organization'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    instance_id: 1
                    name: test
                    street: abc
                    postcode: '12345'
                    city: abc
                    contact: abc
                    created_at: '2022-08-15T17:23:12.000000Z'
                    updated_at: '2022-08-15T17:23:12.000000Z'
                  -
                    id: 2
                    instance_id: 2
                    name: Instance
                    street: Street
                    postcode: Postcode
                    city: City
                    contact: Contact
                    created_at: '2022-08-21T11:34:14.000000Z'
                    updated_at: '2022-08-21T11:34:14.000000Z'
                  -
                    id: 3
                    instance_id: 3
                    name: Instance
                    street: Street
                    postcode: Postcode
                    city: City
                    contact: Contact
                    created_at: '2022-08-21T11:34:55.000000Z'
                    updated_at: '2022-08-21T11:34:55.000000Z'
      tags:
        - Organization
    post:
      summary: 'Create new Organization'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'ID of the instance the organization is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the organization.'
                  example: Caritas
                street:
                  type: string
                  description: 'Street where the organization is located.'
                  example: 'Franziskanergasse 3'
                postcode:
                  type: string
                  description: 'Postcode where the organization is located.'
                  example: ' 97070'
                city:
                  type: string
                  description: 'City where the organization is located.'
                  example: Wuerzburg
                contact:
                  type: string
                  description: 'Contact information from the organization.'
                  example: 'You can call me under 1-603-413-4124'
              required:
                - instance_id
                - name
                - street
                - postcode
                - city
                - contact
  '/api/admin/organization/{id}':
    get:
      summary: 'Show specified Organization'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  instance_id: 2
                  name: Instance
                  street: Street
                  postcode: Postcode
                  city: City
                  contact: Contact
                  created_at: '2022-08-21T11:34:14.000000Z'
                  updated_at: '2022-08-21T11:34:14.000000Z'
                properties:
                  id:
                    type: integer
                    example: 2
                  instance_id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: Instance
                  street:
                    type: string
                    example: Street
                  postcode:
                    type: string
                    example: Postcode
                  city:
                    type: string
                    example: City
                  contact:
                    type: string
                    example: Contact
                  created_at:
                    type: string
                    example: '2022-08-21T11:34:14.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-21T11:34:14.000000Z'
      tags:
        - Organization
    put:
      summary: 'Update specified Organization'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'ID of the instance the organization is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the organization.'
                  example: Caritas
                street:
                  type: string
                  description: 'Street where the organization is located.'
                  example: 'Franziskanergasse 3'
                postcode:
                  type: string
                  description: 'Postcode where the organization is located.'
                  example: ' 97070'
                city:
                  type: string
                  description: 'City where the organization is located.'
                  example: Wuerzburg
                contact:
                  type: string
                  description: 'Contact information from the organization.'
                  example: 'You can call me under 1-603-413-4124'
              required:
                - instance_id
                - name
                - street
                - postcode
                - city
                - contact
    delete:
      summary: 'Delete specified Organization'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Organization
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the organization.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/pdf/card/{card_id}':
    get:
      summary: 'Print specified Card'
      description: "<small class=\"badge badge-purple\">App authorization available</small>\n\nGenerate PDF for the given Card-ID. You can control the response with the Query-Params listed below.\nIf none is given it will generate a json with the base64 encoded PDF-File."
      parameters:
        -
          in: query
          name: download
          description: 'Download generated PDF'
          example: null
          required: false
          schema:
            type: string
            description: 'Download generated PDF'
            example: null
        -
          in: query
          name: raw
          description: 'Show PDF in Browser'
          example: null
          required: false
          schema:
            type: string
            description: 'Show PDF in Browser'
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - PDF
    parameters:
      -
        in: path
        name: card_id
        description: 'The ID of the card.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/person:
    get:
      summary: 'List all persons'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    card_id: 1
                    gender: male
                    age: 18
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 2
                    card_id: 1
                    gender: female
                    age: 15
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 3
                    card_id: 49394739894111
                    gender: male
                    age: 23
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
      tags:
        - Person
    post:
      summary: 'Create new Person'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the person is attached to.'
                  example: '50080528753334'
                gender:
                  type: string
                  description: 'Gender of the person.'
                  example: male
                age:
                  type: integer
                  description: 'Age of the Person.'
                  example: 20
              required:
                - card_id
                - gender
                - age
  '/api/admin/person/{id}':
    get:
      summary: 'Show specified Person'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  card_id: 1
                  gender: female
                  age: 15
                  created_at: '2022-08-18T13:48:25.000000Z'
                  updated_at: '2022-08-18T13:48:25.000000Z'
                properties:
                  id:
                    type: integer
                    example: 2
                  card_id:
                    type: integer
                    example: 1
                  gender:
                    type: string
                    example: female
                  age:
                    type: integer
                    example: 15
                  created_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
      tags:
        - Person
    put:
      summary: 'Update specified Person'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the person is attached to.'
                  example: '50080528753334'
                gender:
                  type: string
                  description: 'Gender of the person.'
                  example: male
                age:
                  type: integer
                  description: 'Age of the Person.'
                  example: 20
              required:
                - card_id
                - gender
                - age
    delete:
      summary: 'Delete specified Person'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Person
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the person.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-type:
    get:
      summary: 'List all ProductTypes'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: t-shirt
                    icon: 't-shirt icon'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 2
                    name: shoe
                    icon: 'shoe icon'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 3
                    name: sock
                    icon: 'sock icon'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
      tags:
        - 'Product Type'
    post:
      summary: 'Create new ProductType'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Product Type'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the product type.'
                  example: T-Shirt
                icon:
                  type: string
                  description: 'Icon of the product type.'
                  example: 'Icon value'
              required:
                - name
  '/api/admin/product-type/{productType_id}':
    get:
      summary: 'Show specified ProductType'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: t-shirt
                  icon: 't-shirt icon'
                  created_at: '2022-08-18T13:48:25.000000Z'
                  updated_at: '2022-08-18T13:48:25.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: t-shirt
                  icon:
                    type: string
                    example: 't-shirt icon'
                  created_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
      tags:
        - 'Product Type'
    put:
      summary: 'Update specified ProductType'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Product Type'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the product type.'
                  example: T-Shirt
                icon:
                  type: string
                  description: 'Icon of the product type.'
                  example: 'Icon value'
              required:
                - name
    delete:
      summary: 'Delete specified ProductType'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - 'Product Type'
    parameters:
      -
        in: path
        name: productType_id
        description: 'The ID of the productType.'
        example: 1
        required: true
        schema:
          type: integer
  /api/reservation:
    get:
      summary: 'List all Reservations'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 2
                    card_id: 1
                    shop_id: 1
                    time: '2022-08-20T16:30:00.000000Z'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 3
                    card_id: 1
                    shop_id: 1
                    time: '2022-08-20T08:00:00.000000Z'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 4
                    card_id: 1
                    shop_id: 1
                    time: '2022-08-21T08:00:00.000000Z'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
                  -
                    id: 5
                    card_id: 1
                    shop_id: 2
                    time: '2022-08-21T15:00:00.000000Z'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
      tags:
        - Reservation
    post:
      summary: 'Create new Reservation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the reservation is attached to.'
                  example: '50080528753334'
                shop_id:
                  type: string
                  description: 'ID of the shop the reservation is for.'
                  example: '50080528753334'
                time:
                  type: string
                  description: 'Date and Time for the reservation. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
              required:
                - card_id
                - shop_id
                - time
  '/api/reservation/{id}':
    get:
      summary: 'Show specified Reservation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  card_id: 1
                  shop_id: 1
                  time: '2022-08-20T16:30:00.000000Z'
                  created_at: '2022-08-18T13:48:25.000000Z'
                  updated_at: '2022-08-18T13:48:25.000000Z'
                properties:
                  id:
                    type: integer
                    example: 2
                  card_id:
                    type: integer
                    example: 1
                  shop_id:
                    type: integer
                    example: 1
                  time:
                    type: string
                    example: '2022-08-20T16:30:00.000000Z'
                  created_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-18T13:48:25.000000Z'
      tags:
        - Reservation
    put:
      summary: 'Update specified Reservation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the reservation is attached to.'
                  example: '50080528753334'
                shop_id:
                  type: string
                  description: 'ID of the shop the reservation is for.'
                  example: '50080528753334'
                time:
                  type: string
                  description: 'Date and Time for the reservation. Must be a valid date.'
                  example: '2022-08-04 12:00:00'
              required:
                - card_id
                - shop_id
                - time
    delete:
      summary: 'Delete specified Reservation'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Reservation
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the reservation.'
        example: 2
        required: true
        schema:
          type: integer
  /api/admin/shop:
    get:
      summary: 'List all Shops'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "[\n {\n     \"id\": 1,\n     \"organization_id\": 1,\n     \"name\": \"organization\",\n     \"street\": \"organizations street\",\n     \"postcode\": \"12345\",\n     \"city\": \"oraganizations city\",\n     \"contact\": \"organizations contact\",\n     \"opening_hours\":\n     {\n         \"opening_hours\":\n         [\n             {\n                 \"monday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"tuesday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"wednesday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"thursday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"friday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"saturday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"sunday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             }\n         ]\n     },\n     \"created_at\": \"2022-08-18T13:48:25.000000Z\",\n     \"updated_at\": \"2022-08-18T13:48:25.000000Z\"\n },\n {\n     \"id\": \"\n     \"organization_id\": §,\n     \"name\": \"organization\",\n     \"street\": \"organizations street\",\n     \"postcode\": \"12345\",\n     \"city\": \"organizations city\",\n     \"contact\": \"organizations contact\",\n     \"opening_hours\":\n     {\n         \"opening_hours\":\n         [\n             {\n                 \"monday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"tuesday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"wednesday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"thursday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"friday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"saturday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             },\n             {\n                 \"sunday\":\n                 {\n                     \"opens_at\": \"08:00\",\n                     \"closes_at\": \"17:00\"\n                 }\n             }\n         ]\n     },\n     \"created_at\": \"2022-08-18T13:48:25.000000Z\",\n     \"updated_at\": \"2022-08-18T13:48:25.000000Z\"\n }\n]"
      tags:
        - Shop
    post:
      summary: 'Create new Shop'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Shop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_id:
                  type: string
                  description: 'ID of the organization the shop is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the shop.'
                  example: 'The friendly shop around the corner'
                street:
                  type: string
                  description: 'Street where the shop is located.'
                  example: 'Around the corner'
                postcode:
                  type: string
                  description: 'Postcode where the shop is located.'
                  example: '50080'
                city:
                  type: string
                  description: 'City where the shop is located.'
                  example: Cornville
                contact:
                  type: string
                  description: 'Contact information from the shop.'
                  example: 'You can call me under 1-603-413-4124'
                opening_hours:
                  type: object
                  description: ''
                  example: []
                  properties:
                    monday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Monday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Monday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Monday. Must be at least 1.'
                            example: 1
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    tuesday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Tuesday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Tuesday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Tuesday. Must be at least 1.'
                            example: 1
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    wednesday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Wednesday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Wednesday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Wednesday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    thursday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Thursday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Thursday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Thursday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    friday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Friday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Friday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Friday. Must be at least 1.'
                            example: 1
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    saturday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Saturday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Saturday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Saturday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    sunday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Sunday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Sunday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Sunday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
              required:
                - organization_id
                - name
                - street
                - postcode
                - city
                - contact
  '/api/admin/shop/{id}':
    get:
      summary: 'Show specified Shop'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    organization_id: 1
                    name: organization
                    street: 'organizations street'
                    postcode: '12345'
                    city: 'oraganizations city'
                    contact: 'organizations contact'
                    opening_hours:
                      opening_hours:
                        -
                          monday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          tuesday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          wednesday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          thursday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          friday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          saturday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                        -
                          sunday:
                            opens_at: '08:00'
                            closes_at: '17:00'
                    created_at: '2022-08-18T13:48:25.000000Z'
                    updated_at: '2022-08-18T13:48:25.000000Z'
      tags:
        - Shop
    put:
      summary: 'Update specified Shop'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Shop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_id:
                  type: string
                  description: 'ID of the organization the shop is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the shop.'
                  example: 'The friendly shop around the corner'
                street:
                  type: string
                  description: 'Street where the shop is located.'
                  example: 'Around the corner'
                postcode:
                  type: string
                  description: 'Postcode where the shop is located.'
                  example: '50080'
                city:
                  type: string
                  description: 'City where the shop is located.'
                  example: Cornville
                contact:
                  type: string
                  description: 'Contact information from the shop.'
                  example: 'You can call me under 1-603-413-4124'
                opening_hours:
                  type: object
                  description: ''
                  example: []
                  properties:
                    monday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Monday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Monday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Monday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    tuesday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Tuesday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Tuesday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Tuesday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    wednesday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Wednesday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Wednesday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Wednesday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    thursday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Thursday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Thursday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Thursday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    friday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Friday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Friday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Friday. Must be at least 1.'
                            example: 1
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    saturday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Saturday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Saturday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Saturday. Must be at least 1.'
                            example: 0
                        required:
                          - opens_at
                          - closes_at
                          - slots
                    sunday:
                      type: array
                      description: ''
                      example:
                        - []
                      items:
                        type: object
                        properties:
                          opens_at:
                            type: string
                            description: 'Time of opening of the store on Sunday. The value format is invalid.'
                            example: '07:30'
                          closes_at:
                            type: string
                            description: 'Time of closing of the store on Sunday. The value format is invalid.'
                            example: '19:00'
                          slots:
                            type: integer
                            description: 'Number of slots of the store for Sunday. Must be at least 1.'
                            example: 1
                        required:
                          - opens_at
                          - closes_at
                          - slots
              required:
                - organization_id
                - name
                - street
                - postcode
                - city
                - contact
    delete:
      summary: 'Delete specified Shop'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Shop
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the shop.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/user:
    get:
      summary: 'List all Users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    post:
      summary: 'Create new User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'ID of the instance the user is attached to.'
                  example: '50080528753334'
                organization_id:
                  type: string
                  description: 'ID of the organization the user is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the user.'
                  example: xX_B4d-gUY_08_Xx
                email:
                  type: string
                  description: 'Email of the user. Must be a valid email address.'
                  example: B4d-gUY@web.de
                password:
                  type: string
                  description: 'Password of the user.'
                  example: MyP4zzW0rD
              required:
                - instance_id
                - organization_id
                - name
                - email
                - password
  '/api/admin/user/{id}':
    get:
      summary: 'Show specified User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - User
    put:
      summary: 'Update specified User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_id:
                  type: string
                  description: 'ID of the instance the user is attached to.'
                  example: '50080528753334'
                organization_id:
                  type: string
                  description: 'ID of the organization the user is attached to.'
                  example: '50080528753334'
                name:
                  type: string
                  description: 'Name of the user.'
                  example: xX_B4d-gUY_08_Xx
                email:
                  type: string
                  description: 'Email of the user. Must be a valid email address.'
                  example: B4d-gUY@web.de
                password:
                  type: string
                  description: 'Password of the user.'
                  example: MyP4zzW0rD
              required:
                - instance_id
                - organization_id
                - name
                - email
                - password
    delete:
      summary: 'Delete specified User'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/visit:
    get:
      summary: 'List all Visits'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 6
                    card_id: 1
                    user_id: 1
                    created_at: '2022-08-16T16:32:52.000000Z'
                    updated_at: '2022-08-16T16:32:52.000000Z'
                  -
                    id: 7
                    card_id: 1
                    user_id: 1
                    created_at: '2022-08-17T13:52:35.000000Z'
                    updated_at: '2022-08-17T13:52:35.000000Z'
                  -
                    id: 8
                    card_id: 1
                    user_id: 3
                    created_at: '2022-08-21T11:50:35.000000Z'
                    updated_at: '2022-08-21T11:50:35.000000Z'
      tags:
        - Visit
    post:
      summary: 'Create new Visit'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Visit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the visit is attached to.'
                  example: '50080528753334'
                user_id:
                  type: string
                  description: 'ID of the user the visit is attached to.'
                  example: '50080528753334'
              required:
                - card_id
                - user_id
  '/api/admin/visit/{id}':
    get:
      summary: 'Show specified Visit'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  card_id: 1
                  user_id: 1
                  created_at: '2022-08-16T16:32:52.000000Z'
                  updated_at: '2022-08-16T16:32:52.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  card_id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2022-08-16T16:32:52.000000Z'
                  updated_at:
                    type: string
                    example: '2022-08-16T16:32:52.000000Z'
      tags:
        - Visit
    put:
      summary: 'Update specified Visit'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Visit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                card_id:
                  type: string
                  description: 'ID of the card the visit is attached to.'
                  example: '50080528753334'
                user_id:
                  type: string
                  description: 'ID of the user the visit is attached to.'
                  example: '50080528753334'
              required:
                - card_id
                - user_id
    delete:
      summary: 'Delete specified Visit'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
      tags:
        - Visit
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the visit.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: ''
  -
    name: Card
    description: ''
  -
    name: Checkout
    description: ''
  -
    name: Limitation
    description: ''
  -
    name: 'Limitation Set'
    description: ''
  -
    name: 'Line Item'
    description: ''
  -
    name: Organization
    description: ''
  -
    name: PDF
    description: ''
  -
    name: Person
    description: ''
  -
    name: 'Product Type'
    description: ''
  -
    name: Reservation
    description: ''
  -
    name: Shop
    description: ''
  -
    name: User
    description: ''
  -
    name: Visit
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
